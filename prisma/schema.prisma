// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("admin") // admin, editor, viewer
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Activity {
  id            String    @id @default(cuid())
  title         String
  slug          String    @unique
  content       String    @db.Text
  imageUrl      String?
  videoUrl      String?   // URL video từ YouTube, Vimeo, hoặc Cloudinary
  category      String?
  location      String?   // Địa điểm chuyến đi
  tripDate      DateTime? // Ngày diễn ra chuyến đi
  duration      Int?      // Số ngày (1, 2, 3...)
  volunteerCount Int?      // Số lượng tình nguyện viên
  status        String    @default("completed") // completed, upcoming, registration_open, preparing
  isPublished   Boolean   @default(false)
  isUpcoming    Boolean   @default(false) // Đánh dấu chuyến sắp tới
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Donation {
  id        String   @id @default(cuid())
  name      String?
  amount    Float
  message   String?  @db.Text
  isPublic  Boolean  @default(true)
  isAnonymous Boolean @default(false)
  createdAt DateTime @default(now())
}

model Expense {
  id          String   @id @default(cuid())
  title       String
  amount      Float
  description String?  @db.Text
  category    String?
  event       String?
  createdAt   DateTime @default(now())
}

model SiteContent {
  id        String   @id @default(cuid())
  key       String   @unique
  value     String   @db.Text
  type      String   @default("text") // text, html, image, json
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Media {
  id        String   @id @default(cuid())
  url       String
  type      String   // image, video, document
  altText   String?
  filename  String?
  size      Int?
  uploadedAt DateTime @default(now())
}

model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  subject   String?
  message   String   @db.Text
  isRead    Boolean  @default(false)
  createdAt DateTime @default(now())
}
